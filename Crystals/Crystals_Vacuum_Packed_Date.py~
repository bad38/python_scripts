# This script was designed to access the database and return all crystals that meet the designated criteria


from pymongo import MongoClient 
from pprint import pprint 
import json 
import bson
import collections 
import Library_JsonLoad

#This is where the user selects the database in which they want to search for their item
client = MongoClient() 
db = client.cdb 
collection = db.sandbox 

#first = int(raw_input("(first_year_int): ")) 
#second = int(raw_input("(last_year_int+1): "))
#third = int(raw_input("(first_month_int): ")) 
#fourth = int(raw_input("(last_month_int+1): ")) 
#fifth = int(raw_input("(first_day_int): ")) 
#sixth = int(raw_input("(last_day_int+1): ")) 


def Search_by_Crystals_vacuum_packed_date(first,second,third,fourth,fifth,sixth):
#This next definiton defines the function convert() that converts the database infromation form unicode into string
	def convert(data):
		if isinstance(data, basestring):
			return str(data)
		elif isinstance(data, bson.objectid.ObjectId): 
			#print 'data inside convert',  data
			return str(data)
		elif isinstance(data, collections.Mapping):
			return dict(map(convert, data.iteritems()))
		elif isinstance(data, collections.Iterable):
			return type(data)(map(convert, data))
		else:
			return data 

	FullObject = []

#Creating the loop that will loop over all of the days in the year of 2008 (Note: this can be edited by adjusting the ranges)	
	for Year in range(first,second):
		for Month in range(third,fourth): 
			for Day in range(fifth,sixth):
				DateString = str(Year) + '-' + str(Month) + '-' + str(Day)

#The Following for loop looks in the database and retrieves the information requested 
				for vacuum_packed in db.sandbox.find({"vacuum_packed": DateString}):
					vacuum_packedjsonOK = convert(vacuum_packed)
					#pprint (convert(vacuum_packed))
					#print type(convert(vacuum_packed)['_id'])
					#print dir(convert(vacuum_packed)['_id'])

					FullObject.append(vacuum_packedjsonOK)

#Defining the string that the information will be dumped too
	FullObjectAsString = json.dumps( FullObject , indent=4) 

#Defining the file that will hold the information for all of the selected crystals       
	FileHandle = open('Crystals_found_by_Vacuum_Packed_Date.json', 'w')
	FileHandle.write(FullObjectAsString)
	FileHandle.close()



	FileHandle = open('Crystals_found_by_Vacuum_Packed_Date.json', 'r')
	FullObjectAsStringFromFile = FileHandle.read()
	FileHandle.close()
#pprint(FullObjectAsStringFromFile)

	FullObjectFromFile = Library_JsonLoad.Main(
		FullObjectAsStringFromFile,
		ForceAscii = True,
	)
	#pprint(FullObjectFromFile)
